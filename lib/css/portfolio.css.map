{"version":3,"sources":["_reset.scss","_variables.scss","_portfolio.scss","mixins/_flex.scss","mixins/_breakpoints.scss","functions/_shade.scss","mixins/_grid.scss"],"names":[],"mappings":"AAAA,EACE,8BAAA,AACA,sBAAA,SACA,SAAU,CACX,KAOC,wBCXa,CDYd,QAGC,kBACA,iBAAkB,CAElB,oCAJF,QAKI,iBAAkB,CAErB,CErBD,WCCE,iCAAA,AACA,yBADA,AACA,yBAAA,oBAAA,AAIE,qBAJF,AAIE,oBAJF,AAIE,aAAA,mBAAA,AAMF,sBANE,AAMF,kBANE,AAMF,cAAA,uBAAA,AA8BA,mBA9BA,AA8BA,eAAA,8BAAA,AACA,2BADA,AACA,sBAAA,0BAAA,AAgBA,4BAhBA,AAgBA,uBAhBA,AAgBA,oBAAA,uBAAA,ADtDA,mCCsDA,ADtDA,oBCsDA,ADtDA,2BAAA,eAAgB,CAEhB,oCAPF,WAQI,eAAgB,CAEnB,CAAA,2BCTC,iCAAA,AACA,yBADA,AACA,yBAAA,oBAAA,AAIE,qBAJF,AAIE,oBAJF,AAIE,aAAA,mBAAA,AAMF,sBANE,AAMF,kBANE,AAMF,cAAA,uBAAA,AC8BA,mBD9BA,AC8BA,eAAA,YACA,4BAAiD,CAjCjD,0BAAwB,2BAyBtB,sBAA8D,CFHjE,CE9BC,0BAAwB,2BAqCtB,UAAW,CFPd,CAAA,2CAZK,wBGdmC,CHepC,2CADC,wBGdmC,CHepC,2CADC,wBGdmC,CHepC,2CADC,qBGdmC,CHepC,qDAMC,kDAAA,AAEA,0CAAA,gDAAA,AAAwC,uCAAA,CACzC,iDC7BH,iCAAA,AACA,yBADA,AACA,yBAAA,oBAAA,AAIE,qBAJF,AAIE,oBAJF,AAIE,aAAA,mBAAA,AAWF,sBAXE,AAWF,kBAXE,AAWF,cAAA,0BAAA,ADoBE,4BCpBF,ADoBE,uBCpBF,ADoBE,oBAAA,yBAAA,AAAiB,qBAAjB,AAAiB,gBAAA,CAHrB,sHAQI,SAAU,CARd,8DCjCE,iCAAA,AACA,yBADA,AACA,yBAAA,oBAAA,AAIE,qBAJF,AAIE,oBAJF,AAIE,aAAA,mBAAA,AAMF,sBANE,AAMF,kBANE,AAMF,cAAA,uBAAA,AAUA,mBAVA,AAUA,eAAA,wBAAA,ADyBE,+BCzBF,ADyBE,qBCzBF,ADyBE,uBAAA,oCAAA,AAA4B,2BAA5B,AAA4B,2BAAA,CAbhC,gEAgBM,UAAW,CACZ,oBItCH,iBACA,aAIA,qBACA,0BAIA,uBACA,4BJmCA,gCAAA,AACA,wBAAA,8CAAA,AAEA,sCAFA,AAEA,8BAFA,AAEA,iDAAA,uEAAA,AACA,+DAAA,UAAW,CACZ,4DIpCC,kBAKE,cJoCF,wBDrEa,CCsEd,2BIhCC,eAKE,UJ8BiB,CADrB,6BAGI,cACA,YACA,UAAW,CALf,+BASI,cACA,YACA,eACA,WACA,wBAAA,AAAgB,eAAA,CACjB,iCIhDD,eAKE,WJgDF,cACA,UAAW,CACZ,OAGC,gBACA,kBACA,mBAAoB,CACrB,UAGC,WACA,gBACA,sBACA,eACA,wBAAyB,CAC1B","file":"portfolio.css","sourcesContent":["* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n// :root {\n//   font-size: 10px;\n// }\n\nbody {\n  background-color: $white;\n}\n\n.header {\n  margin-bottom: 3em;\n  position: relative;\n  \n  @media screen and (max-width: 64em) {\n    margin-bottom: 1em;\n  }\n}\n\n// li {\n//   display: inline-block;\n//   height: 100px;\n//   list-style: none;\n//   width: 100px;\n// }\n\n// $current-color: 'magenta';\n\n// $cyan: map-get($palette, $current-color);\n// @each $shade in $cyan {\n//   $length: length($cyan);\n//   $i: index($cyan, $shade);\n\n//   li:nth-child(#{$length}n+#{$i}) {\n//     background-color: $shade;\n//   }\n// }\n","$white: #f8f8f8;\n\n$color-one: #52c9ee;\n$color-two: #e76fa7;\n$color-three: #ffcb38;\n$color-four: #444;\n\n\n$colors: (\n  'cyan': $color-one,\n  'magenta': $color-two,\n  'yellow': $color-three,\n  'black': $color-four,\n);\n\n$shades: (0 .1 .4 .75);\n\n$palette: ();\n\n@each $color, $value in $colors {\n  $values: ();\n  @each $shade in $shades {\n    $i: index($shades, $shade);\n    $values: append($values, shade($value, percentage($shade)));\n  }\n  $palette: map-merge($palette, ($color: $values));\n}\n\n// @debug $palette;\n\n$gutter: 2rem;\n",".portfolio {\n  @include flex;\n  @include align-stretch;\n  @include justify-left;\n\n  padding: 1em 4em;\n\n  @media screen and (max-width: 64em) {\n    padding: 1em 2em;\n  } \n}\n\n[class^='portfolio__item'] {\n  @include flex;\n  @include column-count(3);\n\n  @each $color, $values in $palette {\n    $length: length($palette);\n    $i: index($palette, ($color $values));\n    &:nth-child(#{$length}n+#{$i}) {\n      background-color: nth(map-get($palette, $color), 1);\n    }\n  }\n\n\n  &:hover {\n    .portfolio__content {\n      box-shadow: 0 1em 1.25em rgba(1, 30, 30, .2);\n      // transform: translate(#{($gutter / 2)}, #{($gutter / -2)});\n      transform: translate3d(1rem, -1rem, 1em);\n    }\n  }\n}\n\n.portfolio__item--horizontal {\n  .portfolio__content {\n    @include flex-row;\n    flex-wrap: nowrap;\n  }\n\n  .portfolio__content__thumb,\n  .portfolio__content__description {\n    width: 50%;\n  }\n\n  .portfolio__content__description {\n    @include flex-cell;\n    align-content: space-between;\n\n    p {\n      width: 100%;\n    }\n  }\n}\n\n.portfolio__content {\n  @include grid;\n  @include grid-columns(1fr);\n  @include grid-rows(1fr auto);\n  transition-duration: .3s;\n  transition-property: transform;\n  // transition-timing-function: cubic-bezier(.05, .91, .43, .92);\n  transition-timing-function: cubic-bezier(.01, .97, .8, .95);\n  width: 100%;\n}\n\n.portfolio__content__thumb,\n.portfolio__content__description {\n  @include grid-column(1);\n  background-color: $white;\n}\n\n.portfolio__content__thumb {\n  @include grid-row(1);\n  a {\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n  \n  img {\n    display: block;\n    height: auto;\n    max-width: 100%;\n    width: 100%;\n    transition: none;\n  }\n}\n\n.portfolio__content__description {\n  @include grid-row(2);\n  padding: 1.5em;\n  width: 100%;\n}\n\n.title {\n  font-size: 1.5em;\n  line-height: 1.5em;\n  margin-bottom: .25em;\n}\n\n.subtitle {\n  color: #999;\n  font-size: .75em;\n  letter-spacing: .125em;\n  margin: 1em 0 0;\n  text-transform: uppercase;\n}\n","@mixin flex-base($is-fluid: false) {\n  align-content: flex-start;\n  display: flex;\n  @if $is-fluid {\n    flex: 1 1 auto;\n  } @else {\n    flex: 0 1 auto;\n  }\n}\n\n@mixin flex($is-fluid: false) {\n  @include flex-base($is-fluid);\n  flex-wrap: wrap;\n}\n\n@mixin flex-row {\n  @include flex-base;\n  align-items: stretch;\n}\n\n@mixin flex-cell {\n  @include flex;\n  align-items: flex-start;\n}\n\n// Flex modifiers\n@mixin align-center {\n  align-content: center;\n  align-items: center;\n}\n\n@mixin align-top {\n  align-content: flex-start;\n  align-items: flex-start;\n}\n\n@mixin align-bottom {\n  align-content: flex-end;\n  align-items: flex-end;\n}\n\n@mixin align-stretch {\n  align-content: stretch;\n  align-items: stretch;\n}\n\n@mixin justify-around {\n  justify-content: space-around;\n}\n\n@mixin justify-between {\n  justify-content: space-between;\n}\n\n@mixin justify-center {\n  justify-content: center;\n}\n\n@mixin justify-left {\n  justify-content: flex-start;\n}\n\n@mixin justify-right {\n  justify-content: flex-end;\n}\n","/// Mixin for phone media query\n@mixin phone {\n  @media (max-width: 599px) { @content; }\n}\n/// Mixin for tablet (portrait) and above media query\n@mixin tablet-portrait-up {\n  @media (min-width: 600px) { @content; }\n}\n/// Mixin for below tablet (landscape) media query\n@mixin tablet-landscape-down {\n  @media (max-width: 899px) { @content; }\n}\n/// Mixin for tablet (landscape) and above media query\n@mixin tablet-landscape-up {\n  @media (min-width: 900px) { @content; }\n}\n/// Mixin for below desktop media query\n@mixin desktop-down {\n  @media (max-width: 1199px) { @content; }\n}\n/// Mixin for desktop and above media query\n@mixin desktop-up {\n  @media (min-width: 1200px) { @content; }\n}\n/// Mixin for below big-desktop media query\n@mixin big-desktop-down {\n  @media (max-width: 1799px) { @content; }\n}\n/// Mixin for big-desktop and above media query\n@mixin big-desktop-up {\n  @media (min-width: 1800px) { @content; }\n}\n/// Mixin to programmatically set number of features\n@mixin column-count($num) {\n  @include tablet-landscape-down {\n    width: calc(#{percentage(1 / (round($num / 2)))} - #{$gutter});\n  }\n\n  @include phone {\n    width: 100%;\n  }\n\n  margin: $gutter / 2;\n  width: calc(#{percentage(1 / $num)} - #{$gutter});\n}\n","/// Slightly darken a color\n/// @access public\n/// @param {Color} $color - color to shade\n/// @param {Number} $percentage - percentage of `$color` in returned color\n/// @return {Color}\n@function shade($color, $percentage) {\n  @return mix(black, $color, $percentage);\n}\n","// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n// ::::::::::::::::::::::::::::::::::::::::::::::::::   GRID   :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n\n@function repeat($reps, $value) {\n  $values: ();\n  @for $i from 1 through $reps {\n    $values: append($values, $value, space);\n  }\n  @return $values;\n}\n\n@mixin grid {\n  display: -ms-grid;\n  display: grid;\n}\n\n@mixin grid-columns($columns) {\n  -ms-grid-columns: $columns;\n  grid-template-columns: $columns;\n}\n\n@mixin grid-rows($rows) {\n  -ms-grid-rows: $rows;\n  grid-template-rows: $rows;\n}\n\n@mixin grid-column($start, $span: 1) {\n  -ms-grid-column: $start;\n  @if $span > 1 {\n    -ms-grid-column-span: $span;\n    grid-column: #{$start} / #{$span + 1};\n  } @else {\n    grid-column: $start;\n  }\n}\n\n@mixin grid-row($start, $span: 1) {\n  -ms-grid-row: $start;\n  @if $span > 1 {\n    -ms-grid-row-span: $span;\n    grid-row: #{$start} / #{$span + 1};\n  } @else {\n    grid-row: $start;\n  }\n}\n"]}